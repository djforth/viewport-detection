{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["// import angular from 'angular';\nimport ViewportDetect from '@djforth/viewport-detection-fp';\n\nconst vpDetect = ViewportDetect();\n\nconst viewportDetection = angular.module('$viewportDetection', []).service('resizer', [\n  '$rootScope',\n  '$window',\n  function($rootScope, $window) {\n    vpDetect.track();\n    return {\n      addCallback: vpDetect.addCallback,\n      isSmartDevice: () => vpDetect.touchAvailable(),\n\n      getWidth: () => vpDetect.getWidth(),\n\n      getDevice: () => vpDetect.getDevice(),\n\n      // getCallbacks() {\n      //   return callbacks;\n      // },\n\n      // sizeChange(w) {\n      //   if (current_width === w) {\n      //     return false;\n      //   }\n\n      //   current_width = w;\n      //   return true;\n      // },\n\n      // resizeFn() {\n      //   const size_obj = this.windowSize();\n      //   if (this.sizeChange(size_obj.width)) {\n      //     return this.runCallBacks(size_obj);\n      //   }\n      // },\n\n      // runCallBacks(size) {\n      //   const device = this.getDevice(size.width);\n      //   return callbacks.forEach(function(cb, i) {\n      //     cb(device, size);\n      //     return null;\n      //   });\n      // },\n\n      // //So resize not set multiple times\n      // trackerCalled: false,\n      // Tracks resizes events\n      // trackSize(callback) {\n      //   this.addCallback(callback);\n      //   if (!this.trackerCalled) {\n      //     this.trackerCalled = true;\n      //     const that = this;\n      //     return angular.element($window).bind('resize', function() {\n      //       const size_obj = that.windowSize();\n      //       return that.resizeFn.call(that);\n      //     });\n      //   }\n      // },\n\n      // device = getDevice(size_obj.width)\n      // callback(device, size_obj)\n\n      // windowSize,\n    };\n  },\n]);\n\nexport default viewportDetection;\n"],"names":["vpDetect","angular","module","service","$rootScope","$window","track","addCallback","isSmartDevice","touchAvailable","getWidth","getDevice"],"mappings":"kSAGA,IAAMA,0DAEoBC,QAAQC,OAAO,qBAAsB,IAAIC,QAAQ,UAAW,CACpF,aACA,UACA,SAASC,EAAYC,UACnBL,EAASM,QACF,CACLC,YAAaP,EAASO,YACtBC,cAAe,kBAAMR,EAASS,kBAE9BC,SAAU,kBAAMV,EAASU,YAEzBC,UAAW,kBAAMX,EAASW"}